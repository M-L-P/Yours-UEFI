###############################################################################
#								[Linux.conf]
#			Configuration file for setting something about Linux
###############################################################################

scan_all_linux_kernels false

#####			----{set whether to scan kernels or NOT}----
#------------------------------------------------------------------------------
# Scan for Linux kernels that lack a ".efi" filename extension. This is
# useful for better integration with Linux distributions that provide
# kernels with EFI stub loaders but that don't give those kernels filenames
# that end in ".efi", particularly if the kernels are stored on a
# filesystem that the EFI can read. When set to "1", "true", or "on", this
# option causes all files in scanned directories with names that begin with
# "vmlinuz", "bzImage", or "kernel" to be included as loaders, even if they
# lack ".efi" extensions. Passing this option a "0", "false", or "off" value
# causes kernels without ".efi" extensions to NOT be scanned.
# Default is "true" -- to scan for kernels without ".efi" extensions.
#------------------------------------------------------------------------------

fold_linux_kernels true

#####			----{set whether to fold kernels or NOT}----
#------------------------------------------------------------------------------
# Combine all Linux kernels in a given directory into a single entry.
# When so set, the kernel with the most recent time stamp will be launched
# by default, and its filename will appear in the entry's description.
# To launch other kernels, the user must press F2 or Insert; alternate
# kernels then appear as options on the sub-menu.
# Default is "true" -- kernels are "folded" into a single menu entry.
#------------------------------------------------------------------------------

#extra_kernel_version_strings linux-lts,linux

#####	----{set to show kernels with unrecognized version numbers}----
#------------------------------------------------------------------------------
# Comma-delimited list of strings to treat as if they were numbers for the
# purpose of kernel version number detection. These strings are matched on a
# first-found basis; that is, if you want to treat both "linux-lts" and
# "linux" as version strings, they MUST be specified as "linux-lts,linux",
# since if you specify it the other way, both vmlinuz-linux and
# vmlinuz-linux-lts will return with "linux" as the "version string," which
# is not what you'd want. Also, if the kernel or initrd file includes both a
# specified string and digits, the "version string" includes both. For
# instance, "vmlinuz-linux-4.8" would yield a version string of "linux-4.8".
# This option is intended for Arch and other distributions that don't include
# version numbers in their kernel filenames, but may provide other uniquely
# identifying strings for multiple kernels. If this feature causes problems
# (say, if your kernel filename includes "linux" but the initrd filename
# doesn't), be sure this is set to an empty string
# (extra_kernel_version_strings "") or comment out the option to disable it.
# Default is no extra version strings
#------------------------------------------------------------------------------

write_systemd_vars false

#####	----{set whether to write to systemd EFI variables or NOT}----
#------------------------------------------------------------------------------
# Write to systemd EFI variables (currently only LoaderDevicePartUUID) when
# launching Linux via an EFI stub loader, ELILO, or GRUB. This variable,
# when present, causes systemd to mount the ESP at /boot or /efi *IF* either
# directory is empty and nothing else is mounted there.
# Default is "false"
#------------------------------------------------------------------------------

#support_gzipped_loaders true

#####		----{set whether to support gzipped loaders or NOT}----
#------------------------------------------------------------------------------
# Support loaders that have been compressed with gzip.
# On x86 and x86-64 platforms, Linux kernels are self-decompressing.
# On ARM64, Linux kernel files are typically compressed with gzip,
# including the EFI stub loader. This makes them unloadable in rEFInd
# unless rEFInd itself uncompresses them. This option enables rEFInd
# to do this. This feature is unnecessary on x86 and x86-64 systems.
# Default is "false" on x86 and x86-64; "true" on ARM64.
#------------------------------------------------------------------------------

#follow_symlinks true

#####			----{set whether to follow symlinks or NOT}----
#------------------------------------------------------------------------------
# Symlinked loaders will be processed when this setting is set to true.
# These are ignored by default as they may result in undesirable outcomes.
# This token may, however, be useful on Linux setups that provide symbolic
# links in scanned locations that point to kernels in unscanned locations,
# such as some openSUSE installations.
#------------------------------------------------------------------------------

###############################################################################

#####{Example One}
#------------------------------------------------------------------------------
# A sample entry for a Linux 3.13 kernel with EFI boot stub support
# on a partition with a GUID of 904404F8-B481-440C-A1E3-11A5A954E601.
# This entry includes Linux-specific boot options and specification
# of an initial RAM disk. Note uses of Linux-style forward slashes.
# Also note that a leading slash is optional in file specifications.
#menuentry Linux {
#    icon EFI/refind/icons/os_linux.png
#    volume 904404F8-B481-440C-A1E3-11A5A954E601
#    loader bzImage-3.3.0-rc7
#    initrd initrd-3.3.0.img
#    options "ro root=UUID=5f96cafa-e0a7-4057-b18f-fa709db5b837"
#    disabled
#}
#------------------------------------------------------------------------------
#####{Example Two}
#------------------------------------------------------------------------------
# Below is a more complex Linux example, specifically for Arch Linux.
# This example MUST be modified for your specific installation; if nothing
# else, the PARTUUID code must be changed for your disk. Because Arch Linux
# does not include version numbers in its kernel and initrd filenames, you
# may need to use manual boot stanzas when using fallback initrds or
# multiple kernels with Arch. This example is modified from one in the Arch
# wiki page on rEFInd (https://wiki.archlinux.org/index.php/rEFInd).
#menuentry "Arch Linux" {
#    icon     /EFI/refind/icons/os_arch.png
#    volume   "Arch Linux"
#    loader   /boot/vmlinuz-linux
#    initrd   /boot/initramfs-linux.img
#    options  "root=PARTUUID=5028fa50-0079-4c40-b240-abfaf28693ea rw add_efi_memmap"
#    submenuentry "Boot using fallback initramfs" {
#        initrd /boot/initramfs-linux-fallback.img
#    }
#    submenuentry "Boot to terminal" {
#        add_options "systemd.unit=multi-user.target"
#    }
#    disabled
#}
#------------------------------------------------------------------------------
#####{Example Three}
#------------------------------------------------------------------------------
# A sample entry for loading Ubuntu using its standard name for
# its GRUB 2 boot loader. Note uses of Linux-style forward slashes
#menuentry Ubuntu {
#    loader /EFI/ubuntu/grubx64.efi
#    icon /EFI/refind/icons/os_linux.png
#    disabled
#}
#------------------------------------------------------------------------------
#####{Example Four}
#------------------------------------------------------------------------------
# A minimal ELILO entry, which probably offers nothing that
# auto-detection can't accomplish.
#menuentry "ELILO" {
#    loader \EFI\elilo\elilo.efi
#    disabled
#}
#------------------------------------------------------------------------------